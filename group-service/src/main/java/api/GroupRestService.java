package api;

// Injection
// import javax.inject.Inject; // Need to understand what injection is
import javax.ws.rs.PathParam; // Need to understand more about what it is

import javax.ws.rs.Path;
import javax.ws.rs.core.Response;
import javax.ws.rs.GET;
import javax.ws.rs.Produces;

// MediaType
import javax.ws.rs.core.MediaType;

// List
import java.util.List;

//  import classes of domain
import domain.model.Group;

// service
import domain.service.GroupService;

// will be removed later
import domain.service.GroupServiceImpl;

// maybe add ApplicationScoped later
@Path("/groups")
public class GroupRestService {
    /*
    @Inject
    private GroupService groupService;
    */

    private GroupService groupService;

    public GroupRestService() {
        this.groupService=new GroupServiceImpl();
    }

    // hello world generated by Thorntail project generator.
    /*
    @GET
    @Produces("text/plain")
    public Response doGet() {
        return Response.ok("Hello from group-service!").build();
    }
    */

    // http://localhost:10080/groups
    // get a list of all groups in JSON
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public List<Group> getAllGroups() {
        return groupService.getAllGroups();
    }

    // http://localhost:10080/groups/{id}
    // get a particular group in JSON
    @GET
    @Path("{id}")
    @Produces(MediaType.APPLICATION_JSON)
    public Group getGroup(@PathParam("id") String id) {
        // need String instead of Integer otherwise we would have a conversion in the parameters !
        return groupService.getGroup(id);
    }
}
